digraph "CFG for 'bInitarr' function" {
	label="CFG for 'bInitarr' function";

	Node0x18a72e0 [shape=record,label="{entry:\l  call void @Initrand()\l  store i32 0, i32* @biggest, align 4\l  store i32 0, i32* @littlest, align 4\l  br label %for.cond\l}"];
	Node0x18a72e0 -> Node0x18a7630;
	Node0x18a7630 [shape=record,label="{for.cond:                                         \l  %i.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]\l  %cmp = icmp sle i32 %i.0, 500\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x18a7630:s0 -> Node0x18a81f0;
	Node0x18a7630:s1 -> Node0x18a82d0;
	Node0x18a81f0 [shape=record,label="{for.body:                                         \l  %call = call i32 @Rand()\l  %conv = sext i32 %call to i64\l  %div = sdiv i64 %conv, 100000\l  %mul = mul nsw i64 %div, 100000\l  %sub = sub nsw i64 %conv, %mul\l  %sub1 = sub nsw i64 %sub, 50000\l  %conv2 = trunc i64 %sub1 to i32\l  %idxprom = sext i32 %i.0 to i64\l  %arrayidx = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %idxprom\l  store i32 %conv2, i32* %arrayidx, align 4\l  %idxprom3 = sext i32 %i.0 to i64\l  %arrayidx4 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %idxprom3\l  %tmp5 = load i32, i32* %arrayidx4, align 4\l  %tmp6 = load i32, i32* @biggest, align 4\l  %cmp5 = icmp sgt i32 %tmp5, %tmp6\l  br i1 %cmp5, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x18a81f0:s0 -> Node0x18a8e20;
	Node0x18a81f0:s1 -> Node0x18a8ef0;
	Node0x18a8e20 [shape=record,label="{if.then:                                          \l  %idxprom7 = sext i32 %i.0 to i64\l  %arrayidx8 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %idxprom7\l  %tmp8 = load i32, i32* %arrayidx8, align 4\l  store i32 %tmp8, i32* @biggest, align 4\l  br label %if.end16\l}"];
	Node0x18a8e20 -> Node0x18a94e0;
	Node0x18a8ef0 [shape=record,label="{if.else:                                          \l  %idxprom9 = sext i32 %i.0 to i64\l  %arrayidx10 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %idxprom9\l  %tmp10 = load i32, i32* %arrayidx10, align 4\l  %tmp11 = load i32, i32* @littlest, align 4\l  %cmp11 = icmp slt i32 %tmp10, %tmp11\l  br i1 %cmp11, label %if.then13, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x18a8ef0:s0 -> Node0x18a98b0;
	Node0x18a8ef0:s1 -> Node0x18a9990;
	Node0x18a98b0 [shape=record,label="{if.then13:                                        \l  %idxprom14 = sext i32 %i.0 to i64\l  %arrayidx15 = getelementptr inbounds [5001 x i32], [5001 x i32]* @sortlist,\l... i64 0, i64 %idxprom14\l  %tmp13 = load i32, i32* %arrayidx15, align 4\l  store i32 %tmp13, i32* @littlest, align 4\l  br label %if.end\l}"];
	Node0x18a98b0 -> Node0x18a9990;
	Node0x18a9990 [shape=record,label="{if.end:                                           \l  br label %if.end16\l}"];
	Node0x18a9990 -> Node0x18a94e0;
	Node0x18a94e0 [shape=record,label="{if.end16:                                         \l  br label %for.inc\l}"];
	Node0x18a94e0 -> Node0x18a7fa0;
	Node0x18a7fa0 [shape=record,label="{for.inc:                                          \l  %inc = add nsw i32 %i.0, 1\l  br label %for.cond\l}"];
	Node0x18a7fa0 -> Node0x18a7630;
	Node0x18a82d0 [shape=record,label="{for.end:                                          \l  ret void\l}"];
}
